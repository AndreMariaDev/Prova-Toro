// <auto-generated />
using System;
using App.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace App.Infra.Migrations
{
    [DbContext(typeof(BanckContext))]
    [Migration("20210430015510_AddFK_NEW")]
    partial class AddFK_NEW
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("App.Domain.Models.Assets", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddedStockMarket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PatrimonyCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Update")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserCreate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserUpdate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Code");

                    b.HasIndex("PatrimonyCode");

                    b.ToTable("Assetss");
                });

            modelBuilder.Entity("App.Domain.Models.BankAccount", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime2");

                    b.Property<string>("Document")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasLimit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Limit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TypeAccount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Update")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserCreate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserUpdate")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Code");

                    b.HasIndex("UserCode")
                        .IsUnique();

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("App.Domain.Models.Patrimony", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("SummarizedEquity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Update")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserCreate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserUpdate")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Code");

                    b.HasIndex("UserCode")
                        .IsUnique();

                    b.ToTable("Patrimonies");
                });

            modelBuilder.Entity("App.Domain.Models.TransactionHistory", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime2");

                    b.Property<string>("Event")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OriginBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginBranch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetBranch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Update")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserCreate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserUpdate")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Code");

                    b.ToTable("TransactionHistories");
                });

            modelBuilder.Entity("App.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Update")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserCreate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserUpdate")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Code");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("App.Domain.Models.UserCredentials", b =>
                {
                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Create")
                        .HasColumnType("datetime2");

                    b.Property<int>("CredentialsType")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Update")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserCreate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserUpdate")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Code");

                    b.HasIndex("UserCode");

                    b.ToTable("UsersCredentialss");
                });

            modelBuilder.Entity("App.Domain.Models.Assets", b =>
                {
                    b.HasOne("App.Domain.Models.Patrimony", "Patrimony")
                        .WithMany("ListAssets")
                        .HasForeignKey("PatrimonyCode");

                    b.Navigation("Patrimony");
                });

            modelBuilder.Entity("App.Domain.Models.BankAccount", b =>
                {
                    b.HasOne("App.Domain.Models.User", "User")
                        .WithOne("BankAccount")
                        .HasForeignKey("App.Domain.Models.BankAccount", "UserCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("App.Domain.Models.Patrimony", b =>
                {
                    b.HasOne("App.Domain.Models.User", "User")
                        .WithOne("Patrimonies")
                        .HasForeignKey("App.Domain.Models.Patrimony", "UserCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("App.Domain.Models.UserCredentials", b =>
                {
                    b.HasOne("App.Domain.Models.User", "User")
                        .WithMany("UserCredentialsItens")
                        .HasForeignKey("UserCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("App.Domain.Models.Patrimony", b =>
                {
                    b.Navigation("ListAssets");
                });

            modelBuilder.Entity("App.Domain.Models.User", b =>
                {
                    b.Navigation("BankAccount");

                    b.Navigation("Patrimonies");

                    b.Navigation("UserCredentialsItens");
                });
#pragma warning restore 612, 618
        }
    }
}
